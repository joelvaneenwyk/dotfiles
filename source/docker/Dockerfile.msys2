# escape=`

#
# Create a MSYS2 environment for testing.
#
# Some interesting resources:
#
#   - https://gist.github.com/tfwio/6678113
#   - https://gist.github.com/fracting/d1e2707da9e1790dbe0f
#   - https://www.msys2.org/wiki/MSYS2-installation/
#   - https://github.com/msys2/MSYS2-packages/blob/master/filesystem/08-xml-catalog.post
#   - https://github.com/msys2/MSYS2-packages/blob/master/filesystem/profile
#

# select as base image matching your host to get process isolation
FROM mcr.microsoft.com/windows/servercore:ltsc2022

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

ARG MSYS_ROOT=C:\msys64
ENV HOME=C:\Users\ContainerAdministrator
ENV MSYS=winsymlinks:native
ENV POST_INSTALL_DOTFILES=C:\msys64\etc\post-install\09-dotfiles.post
ENV MSYS_ROOT=${MSYS_ROOT}

#WORKDIR C:\Users\ContainerAdministrator

#RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
#    Invoke-WebRequest -UseBasicParsing -uri "https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe" -OutFile msys2.exe; `
#    .\msys2.exe -y -oC:\; `
#    Remove-Item msys2.exe ;

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

RUN [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; `
    Invoke-WebRequest -UseBasicParsing -uri "https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe" -OutFile msys2.exe; `
    .\msys2.exe -y -oC:\; `
    Remove-Item msys2.exe ; `
    function msys() { C:\msys64\usr\bin\bash.exe @('-lc') + @Args; } `
    msys ' '; `
    msys 'pacman --noconfirm -Syuu'; `
    msys 'pacman --noconfirm -Syuu'; `
    msys 'pacman --noconfirm -Scc'; `
    Write-Host 'Finished MSYS2 install into Docker.'

SHELL ["cmd.exe", "/s", "/c"]

# Create post-load function so that screen (and log) are not cleared after initialization
#RUN `
#echo MAYBE_FIRST_START=false ^|^| [ -f "/usr/bin/update-ca-trust" ] `
#^&^& sh /usr/bin/update-ca-trust `
#^&^& echo "Post-install complete." >%POST_INSTALL_DOTFILES%

RUN `
    echo Initiating configuration steps. `
    && call "%MSYS_ROOT%\\usr\\bin\\bash" -lc " "

# First run of the shell does numerous post-install steps so we run this manually.
#RUN call C:\\msys64\\msys2_shell.cmd -where C:\\Users\\ContainerAdministrator -no-start -msys2 -defterm -shell bash -lc exit `
#& exit /b 0

#RUN cmd /d /s /c C:\\msys64\\msys2_shell.cmd -where %HOME% -no-start -msys2 -defterm -shell bash -lc exit & exit /b 0
#RUN cmd /d /s /c "C:\\msys64\\msys2_shell.cmd -where %HOME% -here -no-start -msys2 -defterm -shell bash -lc exit & exit /b 0"

#RUN echo Validating that CMD prompt works after initialization of MSYS2.

# Create batch file for launching bash
#RUN echo cmd /s /c C:\\msys64\\msys2_shell.cmd -where %HOME% -here -no-start -msys2 -defterm -shell bash -lc "%*" >"C:\bash.bat"

# https://www.msys2.org/docs/ci/#docker
#SHELL ["cmd.exe", "/s", "/c", "C:\\bash.bat"]

RUN `
    pacman --noconfirm -Syuu `
    && pacman --noconfirm -Syuu `
    && pacman --noconfirm -Scc `
    && pacman -S --quiet --noconfirm --needed `
    msys2-devel msys2-runtime-devel msys2-keyring `
    base-devel git autoconf automake1.16 automake-wrapper libtool libcrypt-devel openssl `
    mingw-w64-x86_64-make mingw-w64-x86_64-gcc mingw-w64-x86_64-binutils `
    texinfo texinfo-tex mingw-w64-x86_64-texlive-bin mingw-w64-x86_64-texlive-core mingw-w64-x86_64-texlive-extra-utils `
    mingw-w64-x86_64-perl `
    mingw-w64-x86_64-poppler

# Copy at the end so that iteration time is faster if changes are made as the above
# steps should not need an update.
RUN mkdir -p /home/${USERNAME}/dotfiles/
COPY --chown=${USERNAME} --chmod=644 ./*.sh /home/${USERNAME}/dotfiles/
COPY --chown=${USERNAME} --chmod=644 ./*.md /home/${USERNAME}/dotfiles/
COPY --chown=${USERNAME} --chmod=644 ./packages/ /home/${USERNAME}/dotfiles/packages/
COPY --chown=${USERNAME} --chmod=644 ./docs/ /home/${USERNAME}/dotfiles/docs/
COPY --chown=${USERNAME} --chmod=644 ./test/ /home/${USERNAME}/dotfiles/test/
COPY --chown=${USERNAME} --chmod=644 ./source/ /home/${USERNAME}/dotfiles/source/

# Setup home directory and profile scripts.
RUN ./setup.sh

ENTRYPOINT [ `
    "cmd.exe", "/s", "/c" `
    ]

CMD [ `
    "C:\\msys64\\msys2_shell.cmd", `
    "-no-start", "-msys2", "-defterm", "-shell", `
    "bash", "-l" `
    ]

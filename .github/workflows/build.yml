#
# Workflow to validate that dotfiles are setup correct for all supported platforms
#

name: dotfiles

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
        - main
        - staging
        - develop
        - dev
    paths-ignore:
      - '*.md'
      - 'setup'
      - 'TODO'
      - 'NEWS'
      - 'LICENSE'
      - 'COPYING'
      - '*.plist'
      - '.gitconfig*'
      - 'META.*'
      - 'THANKS'
      - '.devcontainer/**'
      - '.vscode/**'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'setup'
      - 'TODO'
      - 'NEWS'
      - 'LICENSE'
      - 'COPYING'
      - '*.plist'
      - '.gitconfig*'
      - 'META.*'
      - 'THANKS'
      - '.devcontainer/**'
      - '.vscode/**'

jobs:
  critical:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Initialize environment
        working-directory: ${{ github.workspace }}
        run: bash setup.sh --clean --yes

      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   name: Upload Logs
      #   with:
      #     name: cpanm-logs-critical
      #     path: /home/runneradmin/.cpan*/work/**/*.log

  init:
    needs: critical
    strategy:
      fail-fast: false
      matrix:
        platform:
          - macos-latest
          - windows-latest
        include:
          - platform: macos-latest
            launch: bash setup.sh
            logs: /home/runneradmin/.cpan*/work/**/*.log

          # The following are known errors/warnings when running on Windows:
          #
          #   cp: cannot create symbolic link '/home/runneradmin/dots/test/bats/test/fixtures/parallel/setup_file/helper.bash': No such file or directory
          #   cp: cannot create symbolic link '/home/runneradmin/dots/test/bats/test/fixtures/parallel/suite/helper.bash': No such file or directory
          #   cp: cannot create symbolic link '/home/runneradmin/dots/vim/.config/nvim/init.vim': No such file or directory
          - platform: windows-latest
            launch: cmd /c setup.bat

            # https://github.com/msys2/setup-msys2/blob/master/main.js
            logs: C:\Users\runneradmin\.cpan*\work\**\*.log

    # The type of runner that the job will run on
    runs-on: ${{ matrix.platform }}

    # Always run the matrix even if another job fails
    if: always()

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Initialize environment
        working-directory: ${{ github.workspace }}
        run: ${{ matrix.launch }} --clean --yes

      # Need to
      # - name: Copy out file from volume
      #   run: |
      #     mkdir /home/logs
      #     sudo cp -r ${{ matrix.logs }} /home/logs
      #
      # - uses: actions/upload-artifact@v3
      #   if: always()
      #   name: Upload Logs
      #   with:
      #     name: cpanm-logs-${{ matrix.platform }}
      #     path: ${{ matrix.logs }}
